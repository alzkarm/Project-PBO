/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package porjec_kasir;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class Penjualan extends javax.swing.JFrame implements HitungTotal {
    String driver = "com.mysql.cj.jdbc.Driver";
    String db = "jdbc:mysql://localhost/projectpbo";

    /**   
     * Creates new form Penjualan
     */
    public Penjualan() {
        initComponents();
        tampilData();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        Penjual = new javax.swing.JPanel();
        jLabel27 = new javax.swing.JLabel();
        jLabel28 = new javax.swing.JLabel();
        kode_barang = new javax.swing.JTextField();
        jLabel29 = new javax.swing.JLabel();
        noTrans = new javax.swing.JTextField();
        jLabel30 = new javax.swing.JLabel();
        tgl = new javax.swing.JTextField();
        jLabel31 = new javax.swing.JLabel();
        harga = new javax.swing.JTextField();
        jLabel32 = new javax.swing.JLabel();
        stok = new javax.swing.JTextField();
        simpanPenjualan = new javax.swing.JButton();
        Hapus = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tablePenjual = new javax.swing.JTable();
        jLabel35 = new javax.swing.JLabel();
        jumlah = new javax.swing.JTextField();
        totalPembayaran = new javax.swing.JTextField();
        jLabel36 = new javax.swing.JLabel();
        jButton5 = new javax.swing.JButton();
        namaBarang = new javax.swing.JTextField();
        jLabel33 = new javax.swing.JLabel();
        ubah1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Penjual.setBackground(new java.awt.Color(204, 204, 204));

        jLabel27.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel27.setText("Transaksi Penjual");

        jLabel28.setText("Nomor Transaksi");

        kode_barang.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                kode_barangFocusLost(evt);
            }
        });

        jLabel29.setText("Tanggal Transaksi");

        jLabel30.setText("Kode Barang");

        jLabel31.setText("Nama Barang");

        jLabel32.setText("Harga");

        simpanPenjualan.setText("Simpan");
        simpanPenjualan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                simpanPenjualanActionPerformed(evt);
            }
        });

        Hapus.setText("Hapus");
        Hapus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                HapusActionPerformed(evt);
            }
        });

        tablePenjual.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nomor Transaksi", "Tanggal Transaksi", "Kode Barang", "Nama Barang", "Stok", "Harga", "Jumlah", "Total"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tablePenjual.setGridColor(new java.awt.Color(0, 0, 0));
        tablePenjual.setSelectionBackground(new java.awt.Color(0, 0, 0));
        tablePenjual.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePenjualMouseClicked(evt);
            }
        });
        jScrollPane4.setViewportView(tablePenjual);

        jLabel35.setText("Jumlah");

        jumlah.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jumlahActionPerformed(evt);
            }
        });
        jumlah.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                jumlahKeyReleased(evt);
            }
        });

        totalPembayaran.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                totalPembayaranActionPerformed(evt);
            }
        });
        totalPembayaran.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                totalPembayaranKeyReleased(evt);
            }
        });

        jLabel36.setText("Total");

        jButton5.setText("Kembali");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });

        jLabel33.setText("Stok");

        ubah1.setText("Reset");
        ubah1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ubah1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout PenjualLayout = new javax.swing.GroupLayout(Penjual);
        Penjual.setLayout(PenjualLayout);
        PenjualLayout.setHorizontalGroup(
            PenjualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PenjualLayout.createSequentialGroup()
                .addGroup(PenjualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 797, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(PenjualLayout.createSequentialGroup()
                        .addGroup(PenjualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PenjualLayout.createSequentialGroup()
                                .addGap(384, 384, 384)
                                .addComponent(jLabel27))
                            .addGroup(PenjualLayout.createSequentialGroup()
                                .addGap(34, 34, 34)
                                .addGroup(PenjualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addGroup(PenjualLayout.createSequentialGroup()
                                        .addGroup(PenjualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addGroup(PenjualLayout.createSequentialGroup()
                                                .addComponent(jLabel28)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                                .addComponent(noTrans, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(PenjualLayout.createSequentialGroup()
                                                .addGroup(PenjualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(jLabel29)
                                                    .addComponent(jLabel30)
                                                    .addComponent(jLabel31))
                                                .addGap(23, 23, 23)
                                                .addGroup(PenjualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                                    .addComponent(tgl, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(kode_barang, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                                    .addComponent(namaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                        .addGap(235, 235, 235))
                                    .addGroup(PenjualLayout.createSequentialGroup()
                                        .addComponent(simpanPenjualan)
                                        .addGap(18, 18, 18)
                                        .addComponent(jButton5)
                                        .addGap(17, 17, 17)
                                        .addComponent(Hapus)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(ubah1)
                                        .addGap(206, 206, 206)))
                                .addGroup(PenjualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel32)
                                    .addComponent(jLabel35)
                                    .addComponent(jLabel36)
                                    .addComponent(jLabel33))
                                .addGap(52, 52, 52)
                                .addGroup(PenjualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(totalPembayaran, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(harga, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(stok, javax.swing.GroupLayout.PREFERRED_SIZE, 168, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(11, 11, 11)))
                .addContainerGap(88, Short.MAX_VALUE))
        );
        PenjualLayout.setVerticalGroup(
            PenjualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PenjualLayout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addComponent(jLabel27)
                .addGap(51, 51, 51)
                .addGroup(PenjualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel28)
                    .addComponent(noTrans, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(stok, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel33))
                .addGap(18, 18, 18)
                .addGroup(PenjualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel29)
                    .addComponent(tgl, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel32)
                    .addComponent(harga, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PenjualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel30)
                    .addComponent(kode_barang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel35)
                    .addComponent(jumlah, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PenjualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel36)
                    .addComponent(totalPembayaran, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel31)
                    .addComponent(namaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20)
                .addGroup(PenjualLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(simpanPenjualan)
                    .addComponent(Hapus)
                    .addComponent(jButton5)
                    .addComponent(ubah1))
                .addGap(51, 51, 51)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(11, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 945, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Penjual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 581, Short.MAX_VALUE)
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(Penjual, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addContainerGap()))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void totalPembayaranActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_totalPembayaranActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_totalPembayaranActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        dispose();
        new Menu().setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void simpanPenjualanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_simpanPenjualanActionPerformed
        
            if (noTrans.getText().trim().isEmpty()) {
                 JOptionPane.showMessageDialog(null, "Nomor transaksi harus diisi.", "Peringatan", JOptionPane.ERROR_MESSAGE);
                 return;
            }else if (tgl.getText().trim().isEmpty()) {
                 JOptionPane.showMessageDialog(null, "Tanggal transaksi harus diisi.", "Peringatan", JOptionPane.ERROR_MESSAGE);
                 return;
            }else if (noTrans.getText().trim().isEmpty()) {
                 JOptionPane.showMessageDialog(null, "Nomor transaksi harus diisi.", "Peringatan", JOptionPane.ERROR_MESSAGE);
                 return;
            } 
        
        try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/projectpbo", "root", "");
         PreparedStatement ps = con.prepareStatement("INSERT INTO penjualan (no_trans, tgl_trans, kode_barang, stok, nama_barang, harga, jumlah, total) VALUES (?, ?, ?, ?, ?, ?, ?, ?)")) {

        // Mengatur nilai parameter PreparedStatement
        ps.setString(1, noTrans.getText());
        ps.setString(2, tgl.getText());
        ps.setString(3, kode_barang.getText());
        ps.setInt(4, Integer.parseInt(stok.getText())); // Pastikan stok adalah integer
        ps.setString(5, namaBarang.getText());
        ps.setDouble(6, Double.parseDouble(harga.getText())); // Pastikan harga adalah double
        ps.setInt(7, Integer.parseInt(jumlah.getText())); // Pastikan jumlah adalah integer
        ps.setDouble(8, Double.parseDouble(totalPembayaran.getText())); // Pastikan total adalah double

        // Eksekusi pernyataan SQL
        int rowsAffected = ps.executeUpdate();

        if (rowsAffected > 0) {
            JOptionPane.showMessageDialog(null, "Data berhasil disimpan.");
            tampilData();
            resetUlang();
        } else {
            JOptionPane.showMessageDialog(null, "Gagal menyimpan data.");
        }
    } catch (SQLException e) {
        
    } catch (NumberFormatException e) {
        // Tangani kesalahan format angka
        
    }
    }//GEN-LAST:event_simpanPenjualanActionPerformed

    private void HapusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_HapusActionPerformed
         DefaultTableModel table = (DefaultTableModel) tablePenjual.getModel();
         if(tablePenjual.getSelectedRowCount() == 1){
        int selectedRow = tablePenjual.getSelectedRow();
        String kodeBarang = table.getValueAt(selectedRow, 0).toString(); // Mengambil kode barang dari kolom pertama
        
        // Hapus data dari database
        try {
            Class.forName(driver);
            Connection conn =  (Connection) configDB.config();
            String sql = "DELETE FROM penjualan WHERE no_trans = ?";
            PreparedStatement stmt = conn.prepareStatement(sql);
            stmt.setString(1, kodeBarang);
            stmt.executeUpdate();
            stmt.close();
            conn.close();
            
            // Hapus baris dari tabel setelah berhasil dihapus dari database
            table.removeRow(selectedRow);
            JOptionPane.showMessageDialog(null, "Data berhasil dihapus");
        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        }
    } else {
        if(tablePenjual.getRowCount() == 0){
            JOptionPane.showMessageDialog(null, "Tabel kosong");
        } else {
            JOptionPane.showMessageDialog(null, "Pilih satu baris untuk dihapus");
        }
    }
    }//GEN-LAST:event_HapusActionPerformed

    private void tablePenjualMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePenjualMouseClicked
    // Mendapatkan baris yang dipilih dalam tabel
int i = tablePenjual.getSelectedRow();

// Memastikan ada baris yang dipilih
if (i >= 0) {
    // Mendapatkan model tabel
    DefaultTableModel tableModel = (DefaultTableModel) tablePenjual.getModel();

    // Mengisi nilai-nilai dari tabel ke dalam form input dengan pengecekan null
    Object noTransObj = tableModel.getValueAt(i, 0);
    Object tglObj = tableModel.getValueAt(i, 1);
    Object kodeBarangObj = tableModel.getValueAt(i, 2);
    Object namaBarangObj = tableModel.getValueAt(i, 3);
    Object stokObj = tableModel.getValueAt(i, 4);
    Object hargaObj = tableModel.getValueAt(i, 5);
    Object jumlahObj = tableModel.getValueAt(i, 6);
    Object totalObj = tableModel.getValueAt(i, 7);

    noTrans.setText(noTransObj != null ? noTransObj.toString() : "");
    tgl.setText(tglObj != null ? tglObj.toString() : "");
    kode_barang.setText(kodeBarangObj != null ? kodeBarangObj.toString() : "");
    namaBarang.setText(namaBarangObj != null ? namaBarangObj.toString() : "");
    stok.setText(stokObj != null ? stokObj.toString() : "");
    harga.setText(hargaObj != null ? hargaObj.toString() : "");
    jumlah.setText(jumlahObj != null ? jumlahObj.toString() : "");
    totalPembayaran.setText(totalObj != null ? totalObj.toString() : "");
} else {
    // Menampilkan pesan jika tidak ada baris yang dipilih
    JOptionPane.showMessageDialog(null, "Pilih satu baris terlebih dahulu.");
}
    }//GEN-LAST:event_tablePenjualMouseClicked

    private void ubah1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ubah1ActionPerformed
        // TODO add your handling code here:
        resetUlang();
    }//GEN-LAST:event_ubah1ActionPerformed

    private void totalPembayaranKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_totalPembayaranKeyReleased
        // TODO add your handling code here:
         
        try {
            int harga = Integer.parseInt(this.harga.getText().trim());
            int jumlah = Integer.parseInt(this.jumlah.getText().trim());
            int total = hitungTotal(harga, jumlah);
            totalPembayaran.setText(String.valueOf(total));
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Input tidak valid: " + e.getMessage());
        }
    }//GEN-LAST:event_totalPembayaranKeyReleased

    private void jumlahActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jumlahActionPerformed
        // TODO add your handling code here:
         
    }//GEN-LAST:event_jumlahActionPerformed

    private void jumlahKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jumlahKeyReleased
        // TODO add your handling code here:
        
    }//GEN-LAST:event_jumlahKeyReleased

    private void kode_barangFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_kode_barangFocusLost
        // TODO add your handling code here:
        try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/projectpbo", "root", "");
            Statement st = con.createStatement();
            ResultSet rs = st.executeQuery("SELECT * FROM barang WHERE kode_barang='"+kode_barang.getText()+"'")) {

            if(rs.next()){
                namaBarang.setText(rs.getString("nama_barang"));
                stok.setText(rs.getString("stok_barang"));
                harga.setText(rs.getString("harga_barang"));
            }else{
                JOptionPane.showMessageDialog(null, "Barang tidak di temukan!!");
            }

        } catch (Exception ex) {
            JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
        }
    }//GEN-LAST:event_kode_barangFocusLost
   
    void resetUlang(){
        noTrans.setText("");
        tgl.setText("");
        kode_barang.setText("");
        stok.setText("");
        namaBarang.setText("");
        harga.setText("");
        jumlah.setText("");
        totalPembayaran.setText("");
    
    }
    
    void tampilData() {
        try (Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306/projectpbo", "root", "");
         Statement st = con.createStatement();
         ResultSet rs = st.executeQuery("SELECT * FROM penjualan")) {
        
        DefaultTableModel table = (DefaultTableModel) tablePenjual.getModel();
        table.setRowCount(0);
        
            try {
                while(rs.next()){
                    
                    table.addRow(new Object[]{
                        rs.getString("no_trans"),
                        rs.getString("tgl_trans"),
                        rs.getString("kode_barang"),
                        rs.getString("nama_barang"),
                        rs.getString("stok"),
                        rs.getString("harga"),
                        rs.getString("jumlah"),
                        rs.getString("total"),
                    });
                }   } catch (SQLException ex) {
                Logger.getLogger(Pembelian.class.getName()).log(Level.SEVERE, null, ex);
            }
    }   catch (SQLException ex) {
            Logger.getLogger(Pembelian.class.getName()).log(Level.SEVERE, null, ex);
        }
   }
    
 
    
// untuk menghitung total penjualan
    @Override
    public int hitungTotal(int harga, int jumlah) {
        return harga * jumlah;
    }

    @Override
    public double hitungTotal(double harga, double jumlah) {
        return harga * jumlah;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Penjualan.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Penjualan().setVisible(true);
            }  
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Hapus;
    private javax.swing.JPanel Penjual;
    private javax.swing.JTextField harga;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel27;
    private javax.swing.JLabel jLabel28;
    private javax.swing.JLabel jLabel29;
    private javax.swing.JLabel jLabel30;
    private javax.swing.JLabel jLabel31;
    private javax.swing.JLabel jLabel32;
    private javax.swing.JLabel jLabel33;
    private javax.swing.JLabel jLabel35;
    private javax.swing.JLabel jLabel36;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTextField jumlah;
    private javax.swing.JTextField kode_barang;
    private javax.swing.JTextField namaBarang;
    private javax.swing.JTextField noTrans;
    private javax.swing.JButton simpanPenjualan;
    private javax.swing.JTextField stok;
    private javax.swing.JTable tablePenjual;
    private javax.swing.JTextField tgl;
    private javax.swing.JTextField totalPembayaran;
    private javax.swing.JButton ubah1;
    // End of variables declaration//GEN-END:variables
}
